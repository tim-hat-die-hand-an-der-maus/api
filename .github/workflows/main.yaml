name: Main
on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  check:
    name: Test and Lint
    runs-on: ubuntu-latest
    container: eclipse-temurin:21
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: tim
          POSTGRES_USER: tim
          POSTGRES_PASSWORD: pw
    env:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/tim"
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Run checks
        run: ./gradlew check

  build-container-image:
    name: Container Build
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request'
    needs:
      - check
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            build=${{ github.sha }}
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  push-container-image:
    name: Container Build and Push
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - check
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            build=${{ github.sha }}
          push: true
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    continue-on-error: true
    needs: [ deploy ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old app container images
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
          package-type: container
          min-versions-to-keep: 10
