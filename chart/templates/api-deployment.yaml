---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: backend
spec:
  replicas: {{ .Values.api.replicas }}
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: {{ sub .Values.api.replicas 1 | max 0 }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: backend
      containers:
        - name: app
          image: {{ .Values.image.app }}:{{ .Values.appVersion }}
          ports:
            - containerPort: 8080
              name: http
          startupProbe:
            initialDelaySeconds: 5
            httpGet:
              port: 8080
              path: /q/health/ready
          livenessProbe:
            httpGet:
              port: 8080
              path: /q/health/live
          readinessProbe:
            httpGet:
              port: 8080
              path: /q/health/ready
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 20m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: api-db-config
            - configMapRef:
                name: api-service-config
            - secretRef:
                name: api-secrets
            - secretRef:
                name: api-db-secrets
{{- if gt (.Values.api.replicas | int) 1 }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: backend
  minAvailable: 1
{{- end }}
